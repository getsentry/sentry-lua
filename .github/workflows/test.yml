name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        lua-version: ["5.1", "5.2", "5.3", "5.4", "luajit"]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
    
    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1
    
    - name: Setup Lua (standard versions)
      if: matrix.lua-version != 'luajit' || matrix.os != 'macos-latest'
      uses: leafo/gh-actions-lua@35bcb06abec04ec87df82e08caa84d545348536e # v10
      with:
        luaVersion: ${{ matrix.lua-version }}
    
    - name: Setup LuaJIT on macOS (via Homebrew)
      if: matrix.lua-version == 'luajit' && matrix.os == 'macos-latest'
      run: |
        brew install luajit
        # Create symlinks for compatibility
        sudo ln -sf $(which luajit) /usr/local/bin/lua
        echo "$(dirname $(which luajit))" >> $GITHUB_PATH
    
    - name: Setup LuaRocks (standard installations)
      if: matrix.lua-version != 'luajit' || matrix.os != 'macos-latest'
      uses: leafo/gh-actions-luarocks@e65774a6386cb4f24e293dca7fc4ff89165b64c5 # v4
    
    - name: Setup LuaRocks for LuaJIT on macOS
      if: matrix.lua-version == 'luajit' && matrix.os == 'macos-latest'
      run: |
        brew install luarocks
        # Configure luarocks to work with luajit
        luarocks config lua_interpreter luajit
        luarocks config variables.LUA_DIR /opt/homebrew/opt/luajit
        luarocks config variables.LUA_INCDIR /opt/homebrew/opt/luajit/include/luajit-2.1
    
    - name: Install SSL dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev
    
    - name: Install SSL dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install openssl
        echo "OPENSSL_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV
    
    - name: Install SSL dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Windows should have SSL support built-in with recent Lua builds
        echo "SSL dependencies handled by system"
    
    - name: Install dependencies
      run: make install
    
    - name: Build project (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: make build
    
    - name: Build project (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: make build
    
    - name: Run tests with coverage (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: make coverage-report
    
    - name: Upload coverage artifacts (Linux/macOS)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: coverage-${{ matrix.os }}-lua${{ matrix.lua-version }}
        path: |
          coverage.info
          luacov.report.out
          test-results.xml
        retention-days: 7
    
    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: make test
    
    - name: Upload coverage to Codecov (Ubuntu Lua 5.4 only)
      if: matrix.os == 'ubuntu-latest' && matrix.lua-version == '5.4'
      uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4
      with:
        file: ./coverage.info
        flags: unittests
        name: codecov-${{ matrix.lua-version }}
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload test results to Codecov (Ubuntu Lua 5.4 only)
      if: matrix.os == 'ubuntu-latest' && matrix.lua-version == '5.4'
      uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1
      with:
        file: ./test-results.xml
        token: ${{ secrets.CODECOV_TOKEN }}