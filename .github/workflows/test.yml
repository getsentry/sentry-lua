name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        lua-version: ["5.4"]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Lua
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: ${{ matrix.lua-version }}
    
    - name: Setup LuaRocks
      uses: leafo/gh-actions-luarocks@v4
    
    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
    
    - name: Install SSL dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev
    
    - name: Install SSL dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install openssl
    
    - name: Install SSL dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Windows should have SSL support built-in with recent Lua builds
        echo "SSL dependencies handled by system"
    
    - name: Install dependencies
      run: make install
    
    - name: Build project (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: make build
    
    - name: Build project (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: make build
    
    - name: Run tests with coverage (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: make coverage-report
    
    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: make test
    
    - name: Upload coverage to Codecov (Linux only)
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}