permissions:
  contents: read
name: Love2D Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  love2d-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
    
    - name: Setup Lua 5.4
      uses: leafo/gh-actions-lua@35bcb06abec04ec87df82e08caa84d545348536e # v10
      with:
        luaVersion: "5.4"
    
    - name: Setup LuaRocks
      uses: leafo/gh-actions-luarocks@e65774a6386cb4f24e293dca7fc4ff89165b64c5 # v4
    
    - name: Install Love2D (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo add-apt-repository ppa:bartbes/love-stable
        sudo apt-get update
        sudo apt-get install -y love
        love --version
    
    - name: Install Love2D (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install love
        love --version
    
    - name: Install dependencies
      run: |
        luarocks install busted
        luarocks install tl
        luarocks install lua-cjson
        luarocks install luasocket
        luarocks install luasec
        luarocks install luacov
        luarocks install luacov-reporter-lcov
    
    - name: Build project
      run: make build
      
    - name: Verify lua-https binary for Love2D HTTPS support
      run: |
        # Verify the committed lua-https binary exists - FAIL if missing
        if [ ! -f examples/love2d/https.so ]; then
          echo "❌ CRITICAL: lua-https binary not found at examples/love2d/https.so"
          echo "Love2D tests REQUIRE HTTPS support to pass. The https.so binary must be present."
          echo "Rebuild it with: cd examples/love2d/lua-https && cmake -Bbuild -S. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\$PWD/install && cmake --build build --target install"
          exit 1
        fi
        
        echo "✅ lua-https binary found: examples/love2d/https.so"
        file examples/love2d/https.so
    
    - name: Run Love2D unit tests (busted)
      run: |
        LUA_PATH="build/?.lua;build/?/init.lua;;" busted spec/platforms/love2d/love2d_spec.lua --output=TAP
    
    - name: Run Love2D integration tests (headless)
      run: |
        # Set DISPLAY for headless mode on Ubuntu
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          export DISPLAY=:99
          sudo apt-get install -y xvfb
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3
        fi
        
        # Copy lua-https binary to test directory - FAIL if copy fails
        cp examples/love2d/https.so spec/platforms/love2d/ || {
          echo "❌ CRITICAL: Failed to copy https.so to test directory"
          echo "Love2D integration tests REQUIRE HTTPS support"
          exit 1
        }
        
        # Run Love2D tests and capture output
        cd spec/platforms/love2d
        timeout 30s love . > test_output.log 2>&1
        
        # Check if tests ran successfully by looking for expected output
        if grep -q "All tests passed" test_output.log || grep -q "Tests completed" test_output.log; then
          echo "✅ Love2D integration tests passed"
          cat test_output.log
        else
          echo "❌ Love2D integration tests failed or did not complete properly"
          cat test_output.log
          exit 1
        fi
    
    - name: Test example module loading
      run: |
        cd examples/love2d
        LUA_PATH="../../build/?.lua;../../build/?/init.lua;;" lua test_modules.lua
    
    - name: Package Love2D example
      run: |
        cd examples/love2d
        zip -r sentry-love2d-demo.love . -x "*.DS_Store" "test_modules.lua"
        ls -la sentry-love2d-demo.love
        
    - name: Upload Love2D artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: love2d-artifacts-${{ matrix.os }}
        path: |
          examples/love2d/sentry-love2d-demo.love
        retention-days: 7